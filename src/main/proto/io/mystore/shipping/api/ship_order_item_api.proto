syntax = "proto3";

import "akkaserverless/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

package io.mystore.shipping.api;

option java_outer_classname = "ShipOrderItemApi";

service ShipOrderItemService {
  option (akkaserverless.codegen) = {
    event_sourced_entity: {
      name: "io.mystore.shipping.entity.ShipOrderItem"  //
      entity_type: "ship_order_item"
      state: "io.mystore.shipping.entity.ShipOrderItemState"
      events: [
        "io.mystore.shipping.entity.OrderItemCreated",
        "io.mystore.shipping.entity.ShipSkuItemRequired",
        "io.mystore.shipping.entity.SkuItemAddedToOrder",
        "io.mystore.shipping.entity.SkuItemReleasedFromOrder",
        "io.mystore.shipping.entity.OrderItemBackOrdered"  // force line breaks
      ]
    }
  };

  rpc CreateShipOrderItem(ShipOrderItem) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/ship-order-items/{order_item_id}/add-order-item"
      body: "*"
    };
  }

  rpc AddSkuItemToOrder(SkuOrderItem) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/ship-order-items/{order_item_id}/add-sku-item-to-order"
      body: "*"
    };
  }

  rpc PlaceOnBackOrder(BackOrderShipOrderItem) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/ship-order-items/{order_item_id}/back_order"
      body: "*"
    };
  }

  rpc StockAlert(StockAlertShipOrderItem) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      put: "/ship-order-items/{order_item_id}/stock-alert"
      body: "*"
    };
  }

  rpc GetShipOrderItem(GetShipOrderItemRequest) returns (ShipOrderItem) {
    option (google.api.http) = {
      get: "/ship-order-items/{order_item_id}"
    };
  }
}

message ShipOrderItem {
  string customer_id = 1;
  string order_id = 2;
  string order_item_id = 3 [(akkaserverless.field).entity_key = true];
  string sku_id = 4;
  string sku_name = 5;
  google.protobuf.Timestamp ordered_utc = 6;
  google.protobuf.Timestamp shipped_utc = 7;
  google.protobuf.Timestamp back_ordered_utc = 8;
}

message SkuOrderItem {
  string order_item_id = 1 [(akkaserverless.field).entity_key = true];
  string sku_item_id = 2;
  google.protobuf.Timestamp shipped_utc = 3;
}

message BackOrderShipOrderItem {
  string order_item_id = 1 [(akkaserverless.field).entity_key = true];
}

message StockAlertShipOrderItem {
  string order_item_id = 1 [(akkaserverless.field).entity_key = true];
}

message GetShipOrderItemRequest {
  string order_item_id = 1 [(akkaserverless.field).entity_key = true];
}
