syntax = "proto3";

package io.mystore.shipping.view;

import "akkaserverless/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "io/mystore/shipping/entity/ship_order_item_entity.proto";

option java_outer_classname = "BackOrderedShipOrderItemsModel";

service BackOrderedShipOrderItems {
  option (akkaserverless.codegen) = {
    view: {}
  };

  rpc GetBackOrderedShipOrderItems(GetBackOrderedOrderItemsRequest) returns (GetBackOrderedOrderItemsResponse) {
    option (akkaserverless.method).view.query = {
      query: "SELECT * AS ship_order_items"
             "  FROM back_ordered_ship_order_items"
             " WHERE back_ordered_utc.seconds > 0"
    };
    option (google.api.http) = {
      get: "/back-ordered-ship-order-items"
    };
  }

  rpc ProcessOrderItemCreated(entity.OrderItemCreated) returns (ShipOrderItem) {
    option (akkaserverless.method).eventing.in = {
      event_sourced_entity: "ship_order_item"
    };
    option (akkaserverless.method).view.update = {
      table: "back_ordered_ship_order_items"
      transform_updates: true
    };
  }

  rpc ProcessSkuItemAddedToOrder(entity.SkuItemAddedToOrder) returns (ShipOrderItem) {
    option (akkaserverless.method).eventing.in = {
      event_sourced_entity: "ship_order_item"
    };
    option (akkaserverless.method).view.update = {
      table: "back_ordered_ship_order_items"
      transform_updates: true
    };
  }

  rpc ProcessOrderItemBackOrdered(entity.OrderItemBackOrdered) returns (ShipOrderItem) {
    option (akkaserverless.method).eventing.in = {
      event_sourced_entity: "ship_order_item"
    };
    option (akkaserverless.method).view.update = {
      table: "back_ordered_ship_order_items"
      transform_updates: true
    };
  }

  rpc IgnoreOtherEvents(google.protobuf.Any) returns (ShipOrderItem) {
    option (akkaserverless.method).eventing.in = {
      event_sourced_entity: "ship_order_item"
    };
    option (akkaserverless.method).view.update = {
      table: "back_ordered_ship_order_items"
      transform_updates: true
    };
  }
}

message GetBackOrderedOrderItemsRequest {}

message GetBackOrderedOrderItemsResponse {
  repeated ShipOrderItem ship_order_items = 1;
}

message ShipOrderItem {
  string order_id = 1;
  string order_item_id = 2;
  string sku_id = 3;
  string sku_name = 4;
  google.protobuf.Timestamp back_ordered_utc = 5;
}
