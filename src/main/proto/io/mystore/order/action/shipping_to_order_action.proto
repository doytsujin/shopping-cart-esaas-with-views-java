syntax = "proto3";

package io.mystore.order.action;

import "akkaserverless/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/any.proto";
import "io/mystore/shipping2/entity/shipping_entity.proto";

option java_outer_classname = "ShippingToOrderActionService";

service ShippingToOrder {
  option (akkaserverless.codegen) = {
    action: {}
  };

  rpc OnOrderShipped(shipping2.entity.OrderShipped) returns (google.protobuf.Empty) {
    option (akkaserverless.method).eventing.in = {
      event_sourced_entity: "shipping"
    };
  }

  rpc OnOrderItemShipped(shipping2.entity.OrderItemShipped) returns (google.protobuf.Empty) {
    option (akkaserverless.method).eventing.in = {
      event_sourced_entity: "shipping"
    };
  }

  rpc IgnoreOtherEvents(google.protobuf.Any) returns (google.protobuf.Empty) {
    option (akkaserverless.method).eventing.in = {
      event_sourced_entity: "shipping"
    };
  }
}
