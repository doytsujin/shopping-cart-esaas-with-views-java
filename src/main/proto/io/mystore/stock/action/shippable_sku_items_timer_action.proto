syntax = "proto3";

package io.mystore.stock.action;

import "akkaserverless/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/any.proto";
// import "io/mystore/stock/entity/stock_sku_item_entity.proto";
// import "io/mystore/shipping/entity/order_sku_item_entity.proto";
import "io/mystore/stock/entity/shippable_sku_items_timer_entity.proto";

option java_outer_classname = "ShippableSkuItemsTimerService";

service ShippableSkuItemsTimer {
  option (akkaserverless.codegen) = {
    action: {}
  };

  // rpc OnBackOrderedOrderSkuItem(shipping.entity.BackOrderedOrderSkuItem) returns (google.protobuf.Empty) {
  //   option (akkaserverless.method).eventing.in = {
  //     event_sourced_entity: "order_sku_item"
  //   };
  // }

  // rpc IgnoreOtherOrderSkuItemEvents(google.protobuf.Any) returns (google.protobuf.Empty) {
  //   option (akkaserverless.method).eventing.in = {
  //     event_sourced_entity: "order_sku_item"
  //   };
  // }

  // rpc OnReleasedFromStockSkuItem(stock.entity.ReleasedFromStockSkuItem) returns (google.protobuf.Empty) {
  //   option (akkaserverless.method).eventing.in = {
  //     event_sourced_entity: "stock_sku_item"
  //   };
  // }

  rpc IgnoreOtherStockSkuItemEvents(google.protobuf.Any) returns (google.protobuf.Empty) {
    option (akkaserverless.method).eventing.in = {
      event_sourced_entity: "stock_sku_item"
    };
  }

  rpc OnPingShippableSkuItemsTimer(stock.entity.ShippableSkuItemsTimerState) returns (google.protobuf.Empty) {
    option (akkaserverless.method).eventing.in = {
      value_entity: "shippable_sku_items_timer"
    };
  }
}
