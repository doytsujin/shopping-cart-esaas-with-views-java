syntax = "proto3";

package io.mystore.stock.view;

import "akkaserverless/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/any.proto";
import "io/mystore/stock/entity/stock_sku_item_entity.proto";
import "io/mystore/stock/view/stock_sku_item.proto";

option java_outer_classname = "StockSkuItemsAvailableModel";

service StockSkuItemsAvailable {
  option (akkaserverless.codegen) = {
    view: {}
  };

  rpc GetStockSkuItemsAvailable(GetStockSkuItemsAvailableRequest) returns (GetStockSkuItemsAvailableResponse) {
    option (akkaserverless.method).view.query = {
      query: "SELECT * AS stock_sku_items"
             "  FROM stock_sku_items_available"
             " WHERE sku_id = :sku_id"
             "   AND shipped_utc.seconds = 0"
    };
    option (google.api.http) = {
      get: "/stock-sku-items-available"
    };
  }

  rpc OnStockSkuItemCreated(entity.StockSkuItemCreated) returns (StockSkuItem) {
    option (akkaserverless.method).eventing.in = {
      event_sourced_entity: "stock_sku_item"
    };
    option (akkaserverless.method).view.update = {
      table: "stock_sku_items_available"
      transform_updates: true
    };
  }

  rpc OnJoinedToStockSkuItem(entity.JoinedToStockSkuItem) returns (StockSkuItem) {
    option (akkaserverless.method).eventing.in = {
      event_sourced_entity: "stock_sku_item"
    };
    option (akkaserverless.method).view.update = {
      table: "stock_sku_items_available"
      transform_updates: true
    };
  }

  rpc OnReleasedFromStockSkuItem(entity.ReleasedFromStockSkuItem) returns (StockSkuItem) {
    option (akkaserverless.method).eventing.in = {
      event_sourced_entity: "stock_sku_item"
    };
    option (akkaserverless.method).view.update = {
      table: "stock_sku_items_available"
      transform_updates: true
    };
  }

  rpc IgnoreOtherEvents(google.protobuf.Any) returns (StockSkuItem) {
    option (akkaserverless.method).eventing.in = {
      event_sourced_entity: "stock_sku_item"
    };
    option (akkaserverless.method).view.update = {
      table: "stock_sku_items_available"
      transform_updates: true
    };
  }
}

message GetStockSkuItemsAvailableRequest {
  string sku_id = 1;
}

message GetStockSkuItemsAvailableResponse {
  repeated StockSkuItem stock_sku_items = 1;
}
