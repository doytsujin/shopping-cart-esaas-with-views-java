syntax = "proto3";

import "akkaserverless/annotations.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

package io.mystore.stock.api;

option java_outer_classname = "ShippableSkuItemsTimerApi";

service ShippableSkuItemsTimerService {
  option (akkaserverless.codegen) = {
    value_entity: {
      name: "io.mystore.stock.entity.ShippableSkuItemsTimer"
      entity_type: "shippable_sku_items_timer"
      state: "io.mystore.stock.entity.ShippableSkuItemsTimerState"  //
    }
  };

  rpc CreateShippableSkuItemsTimer(CreateShippableSkuItemsTimerCommand) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/back-order-timer/{sku_id}/create"
      body: "*"
    };
  }

  rpc PingShippableSkuItemsTimer(PingShippableSkuItemsTimerCommand) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/back-order-timer/{sku_id}/ping"
      body: "*"
    };
  }

  rpc GetShippableSkuItemsTimer(GetShippableSkuItemsTimerRequest) returns (GetShippableSkuItemsTimerResponse) {
    option (google.api.http) = {
      get: "/back-order-timer/{sku_id}"
    };
  }
}

message CreateShippableSkuItemsTimerCommand {
  string sku_id = 1 [(akkaserverless.field).entity_key = true];
}

message PingShippableSkuItemsTimerCommand {
  string sku_id = 1 [(akkaserverless.field).entity_key = true];
}

message GetShippableSkuItemsTimerRequest {
  string sku_id = 1 [(akkaserverless.field).entity_key = true];
}

message GetShippableSkuItemsTimerResponse {
  string sku_id = 1;
  google.protobuf.Timestamp started = 2;
  google.protobuf.Timestamp stop_after = 3;
  google.protobuf.Timestamp last_pinged = 4;
}
